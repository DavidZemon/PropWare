<div class="container">
  <div class="row">
    <h1>Download</h1>

    <h2>SimpleIDE (Any Operating System)</h2>

    <p>The following steps explain how to use PropWareâ€™s libraries - including PropWare, Simple, and libpropeller -
      in a SimpleIDE project. Step 2 and onward must be repeated for every new project in SimpleIDE.</p>

    <ol>
      <li>Download the
        <a href="@TC_PW_DL_BASE@/PropWare-@VERSION@-propware.zip?guest=1">libraries and header files</a>.
        Extract the contents to a known location on your disk - this location will be referred to as
        <code>&lt;PROPWARE_PATH&gt;</code> throughout these steps.
      </li>
      <li>Set SimpleIDE to "Project view":
        <ol>
          <li>Open the "Tools" menu and choose "Properties"</li>
          <li>Open the "General" tab and ensure "View Mode" is checked. Press "OK".</li>
          <li>Open the "Tools" menu and:<br/>
            If the first option is "Set Simple View", then ignore it and press anywhere to exit the
            menu.<br/>
            If the first option is "Set Project View", then press it.
          </li>
        </ol>
      </li>
      <li>Ensure project source files end with <code>.cpp</code> not <code>.c</code>.</li>
      <li>From the "Project" menu, choose "Add Include Path". Select <code>
        &lt;PROPWARE_PATH&gt;/include</code> and then press the "Open" button.
      </li>
      <li>From the "Project" menu, choose "Add Library Path". Select <code>&lt;PROPWARE_PATH&gt;/lib</code> and then
        press the "Open" button.
      </li>
      <li>Project Options
        <ul>
          <li>"Compiler Type" = <code>C</code></li>
        </ul>
      </li>
      <li>Compiler
        <ul>
          <li>"Enable Pruning" = <code>True</code></li>
          <li>"Other Compiler Options" =
            <code>-std=gnu++0x -fno-rtti -fno-threadsafe-statics -fno-exceptions</code></li>
        </ul>
      </li>
      <li>Linker
        <ul>
          <li>"Other Linker Options" = <code>-lPropWare -lLibpropeller -lSimple -lLibPropelleruino</code>
          </li>
        </ul>
      </li>
    </ol>

    <h2>Microsoft Windows</h2>

    <ol>
      <li>Download
        <a href="@TC_PW_DL_BASE@/PropWare-@VERSION@.exe?guest=1">PropWare for Windows</a>.
      </li>
      <li>Execute the installer. The default installation path is recommended, but if it must be changed,
        ensure the installation path does not contain parenthesis (such as <code>C:\Program Files (x86)</code>).
      </li>
      <li>Download
        <a href="https://ci.zemon.name/repository/download/PropGCC5_Gcc4win32/.lastSuccessful/propellergcc-alpha_v1_9_0-gcc4-win32.zip?guest=1">
          PropGCC for Windows</a>
      </li>
      <li>Extract PropGCC somewhere on your computer, such as <code>C:\</code>. Note that the PropGCC archive
        contains a root directory, "parallax", so the PropGCC executable will end up in <code>C:\parallax\bin</code>.
        For users without administrative access to the machine, <code>C:\Users\&lt;YOUR USERNAME&gt;</code> will work
        well.
      </li>
      <li>The <a href="#/reference/cmake-reference">CMake Reference</a> page provides PropWare's search order for
        PropGCC, including the list of default search paths. If your PropGCC installation is not
        <code>C:\parallax\bin</code>, take a look at <a href="#/reference/cmake-reference">CMake Reference</a> to
        learn how PropWare can be informed of the correct PropGCC path.
      </li>
    </ol>

    <h2>Linux - Debian/Ubuntu/Mint/Raspbian/etc</h2>

    <ol>
      <li>Download the <a href="@TC_PW_DL_BASE@/propware_@VERSION@-1_all.deb?guest=1"><code>deb</code> package file</a>.
      </li>
      <li>Use <code>dpkg</code> to install the file with: <code>sudo dpkg -i
        propware_@VERSION@-1_all.deb</code>.
      </li>
      <li>An "error" such as the following is perfectly normal if you do not have <code>make</code> or
        <code>cmake</code> installed on your system.
        <pre><code>dpkg: dependency problems prevent configuration of propware:
 propware depends on cmake (>= 3.3); however:
  Package cmake is not installed.

dpkg: error processing package propware (--install):
 dependency problems - leaving unconfigured
Errors were encountered while processing:
 propware</code></pre>
        Finish the installation with <code>sudo apt-get install -f</code>
      </li>
    </ol>

    <h2>Linux - RedHat/Fedora/CentOS/etc</h2>

    <ol>
      <li>Download the
        <a href="@TC_PW_DL_BASE@/propware-@VERSION@-1.noarch.rpm?guest=1"><code>rpm</code> package file</a>.
      </li>
      <li>Install PropWare's dependencies. Depending on your distribution, you will use either <code>yum</code>
        or <code>dnf</code>:
        <ul>
          <li><code>sudo yum install make cmake findutils</code></li>
        </ul>
        <ul>
          <li><code>sudo dnf install make cmake findutils</code></li>
        </ul>
      </li>
      <li>Use <code>rpm</code> to install PropWare itself with:
        <code>sudo rpm -ivh propware-@VERSION@-1.noarch.rpm</code>.
      </li>
    </ol>

    <h2>Mac OSX</h2>

    <p>I am unable to produce easy installation packages for Mac. My apologies. Please execute the following
      lines at the command line to install PropWare on your Mac:</p>

    <pre><code hljs hljs-language="sh">wget @TC_PW_DL_BASE@/PropWare-@VERSION@-propware.zip?guest=1 -Opropware.zip
wget @TC_PW_DL_BASE@/PropWare-@VERSION@-examples.zip?guest=1 -Oexamples.zip
unzip propware.zip
unzip examples.zip
sudo mv share/PropWare /Applications</code></pre>

    <p>To upgrade:</p>

    <pre><code hljs hljs-language="sh">wget @TC_PW_DL_BASE@/PropWare-@VERSION@-propware.zip?guest=1 -Opropware.zip
wget @TC_PW_DL_BASE@/PropWare-@VERSION@-examples.zip?guest=1 -Oexamples.zip
unzip propware.zip
unzip examples.zip
sudo mv /Applications/PropWare /Applications/PropWare.bak
sudo mv share/PropWare /Applications</code></pre>

    <p>Once you have confirmed that the new installation works as expected, remove the old one with the
      following line.<br/>
      NOTE: A command that starts with <code>sudo rm -rf</code> has the potential to be <em>very</em>
      dangerous! I assume no responsibility if you corrupt your system. Be careful.</p>

    <pre><code hljs hljs-language="sh">sudo rm -rf /Applications/PropWare.bak</code></pre>
  </div>
</div>
